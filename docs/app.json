[{"name": "app.py", "content": "\n\nfrom pathlib import Path\nimport numpy as np\nimport pandas as pd\nfrom shiny import App, render, ui, reactive\nfrom htmltools import css\nimport plotly.graph_objs as go\nfrom shinywidgets import output_widget, render_widget, register_widget, reactive_read\nfrom shiny.types import ImgData\n\ncolor0=\"#F2F2F2\"\ncolor3=\"#181818\"\n\ncolor1=\"#EAECEE\"\ncolor2=\"#17202A\"\n\ncolor0=color1\ncolor3=color2\n\ncolor4=\"#D5D8DC\"\n\napp_ui = ui.page_fluid(\n    ui.tags.style(\n    \"\"\"\n    .app-col {\n        color: \"\"\"+color3+\"\"\";\n        \n        background-color: \"\"\"+color4+\"\"\";\n\n        padding-top: 40px;\n        padding-bottom: 80px;\n        padding-left: 80px;\n        padding-right: 80px;\n\n        font-size: 20px;\n        \n    }\n    \"\"\"\n    ),\n    ui.tags.style(\n    \"\"\"\n    .app-box {\n    \n        color: \"\"\"+color3+\"\"\";\n        \n        background-color: \"\"\"+color0+\"\"\";\n\n        border: 1px solid \"\"\"+color3+\"\"\";\n\n        padding-top: 40px;\n        padding-bottom: 40px;\n        padding-left: 80px;\n        padding-right: 80px;\n\n        margin-top: 80px;\n        margin-bottom: 80px;\n        margin-right: 80px;\n        margin-left: 80px;\n        \n        text-align: center;\n        \n    }\n    \"\"\"\n    ),\n    {\"class\": \"app-col\"},\n    ui.panel_title(\"WDVP 2023\"),\n    {\"style\": \"text-align: left;\"},\n    ui.navset_tab(\n        ui.nav(\"Interactive\",\n            ui.h2({\"style\": \"text-align: left;\"}, \"Time Series Data Spirals\"),\n            ui.layout_sidebar(\n                ui.panel_sidebar(\n                    #ui.input_slider(\"choose\", \"Select Data\", 1, 65, 1),\n                    ui.input_select(\"choose\", \" \", {\"1\": \"Tropical Diseases ~ global deaths\",\n                                                    \"2\": \"Tuberculosis ~ global cases\",\n                                                    \"3\": \"Tuberculosis ~ incidence\",\n                                                    \"4\": \"Tuberculosis ~ deaths\",\n                                                    \"5\": \"Malaria ~ Incidence\",\n                                                    \"6\": \"Malaria ~ deaths\",\n                                                    \"7\": \"Polio ~ Incidence\",\n                                                    \"8\": \"HIV / AIDS ~ Incidence (new cases)\",\n                                                    \"9\": \"HIV / AIDS ~ deaths per 100,000\",\n                                                    \"10\": \"HIV / AIDS ~ total deaths\",\n                                                    \"11\": \"# Countries Who've Eradicated Malaria\",\n                                                    \"12\": \"% Smoking\",\n                                                    \"13\": \"Deaths from Smoking\",\n                                                    \"14\": \"Dementia ~ Incidence\",\n                                                    \"15\": \"Health Expenditure\",\n                                                    \"16\": \"Infant Mortality\",\n                                                    \"17\": \"Maternal Mortality\",\n                                                    \"18\": \"Renewable Energy ~ Share of global electricity production\",\n                                                    \"19\": \"Renewable Energy ~ Share of global primary energy\",\n                                                    \"20\": \"Renewable Energy ~ Global energy-generating capacity\",\n                                                    \"21\": \"Wind Power ~ Share of global electricity production\",\n                                                    \"22\": \"Wind Power ~ Total Electricity generated from Wind\",\n                                                    \"23\": \"Wind Power ~ Share of global primary energy production\",\n                                                    \"24\": \"Solar Power ~ Share of global electricity production\",\n                                                    \"25\": \"Solar Power ~ Share of global primary energy\",\n                                                    \"26\": \"Photovoltaic Solar Power (PV) ~ Cumulative capacity\",\n                                                    \"27\": \"Photovoltaic Solar Power (PV) ~ Installation Cost\",\n                                                    \"28\": \"Renewables ~ New Investment\",\n                                                    \"29\": \"Nuclear Power ~ as % of global electricity production\",\n                                                    \"30\": \"Natural Gas ~ as % of global electricity production\",\n                                                    \"31\": \"Oil ~ as % of global electricity production\",\n                                                    \"32\": \"Coal ~ as % of global electricity production\",\n                                                    \"33\": \"% not in extreme poverty\",\n                                                    \"34\": \"% Access to Electricity\",\n                                                    \"35\": \"% Access to Internet\",\n                                                    \"36\": \"People Using At Least Basic Drinking Water\",\n                                                    \"37\": \"% Access to safely managed Sanitation\",\n                                                    \"38\": \"Life Expectancy at birth\",\n                                                    \"39\": \"Hunger ~ prevalence of undernourishment\",\n                                                    \"40\": \"Air Pollution\",\n                                                    \"41\": \"Road traffic death rate\",\n                                                    \"42\": \"Average Happy Planet Index\",\n                                                    \"43\": \"Human Development Index (HDI)\",\n                                                    \"44\": \"Global Literacy Rate\",\n                                                    \"45\": \"Global Female Adult Literacy Rate\",\n                                                    \"46\": \"Global Male Adult Literacy Rate\",\n                                                    \"47\": \"Gap between Male & Female Adult Literacy\",\n                                                    \"48\": \"% of Girls Not in Primary School\",\n                                                    \"49\": \"% of Boys Not in Primary School\",\n                                                    \"50\": \"% of Children Not in Primary School\",\n                                                    \"51\": \"School Enrollment\",\n                                                    \"52\": \"Girls Secondary School Enrollment\",\n                                                    \"53\": \"Expected Years of Schooling\",\n                                                    \"54\": \"Women's MPs ~ % of representatives\",\n                                                    \"55\": \"Electric Cars ~ as % of new sales\",\n                                                    \"56\": \"Price of Lithium Ion Battery Pack\",\n                                                    \"57\": \"Land covered by trees\",\n                                                    \"58\": \"Global living planet index (1970=100%)\",\n                                                    \"59\": \"Global CO2 emissions\",\n                                                    \"60\": \"Methane emissions\",\n                                                    \"61\": \"Foreign Aid\",\n                                                    \"62\": \"GDP per capita\",\n                                                    \"63\": \"GDP growth per capita\",\n                                                    \"64\": \"Economic Freedom\",\n                                                    \"65\": \"Economic Growth\",\n                                                    }\n                                                    ),\n                    #ui.output_ui(\"calc\"),\n                    ui.output_text(\"prnt\"),\n                    #ui.output_image(\"gif\"),\n                    #ui.output_image(\"image\"),\n                ),            \n                ui.panel_main(\n                        output_widget(\"spiralPlot\"),\n                        style=css(display=\"flex\", justify_content=\"center\", align_items=\"center\"),\n                ),\n            ),\n        ),\n        ui.nav(\"About\",\n            ui.row(\n                ui.column(6,\n                ),\n                ui.column(6,\n                    ui.div(\n                        {\"class\": \"app-box\"},\n                        ui.h2(\"About\"),\n                        \n                        ui.p(\n                        ui.tags.body(\n                        \"\"\"\n                        Interactive multi-view dynamic tool for the World Data Visualization Prize 2023 competition 'What Just Happened?' concept and dataset.\n                        \"\"\"\n                        ),\n                        ui.tags.body(\n                        \"\"\"\n                        This visualization shows yearly differences between 2010 and 2020. Blue indicates a relative % decrease, while red shows a relative % increase. The application facilitates the analysis of changes in variables as time has progressed.\n                        \"\"\"\n                        ),\n                        ),\n                        \n                        ui.p(\n                        ui.tags.body(\n                        \"\"\"\n                        These graphs are based on data from The World Data Visualization Prize (WDVP) 2023 and the data file used to create this visualization can be accessed \n                        \"\"\"\n                        ),\n                        ui.tags.a(\"here.\", href=\"https://github.com/columcrowe/wdvp2023-interactive\"),\n                        ui.tags.body(\n                        \"\"\"\n                        The inspiration for the format is the 'Climate Spiral' visualization designed by climate scientist Ed Hawkins from the National Centre for Atmospheric Science, University of Reading.\n                        \"\"\"\n                        ),\n                        ),\n\n                    ),\n                ),\n            )\n        ),\n    )\n)\n\n\ndef server(input, output, session):\n\n    infile = Path(__file__).parent / \"wdv_2023_wjhl10y.csv\"\n    wdv_2023_wjhl10y = pd.read_csv(infile)\n    infile = Path(__file__).parent / \"data_descs.csv\"\n    types = pd.read_csv(infile)\n    types= types.replace('', np.nan, regex=True)\n    types = types.astype(str)\n\n    @output\n    @render.ui\n    def calc():\n      choose = int(input.choose())-1\n      perc_diff = types[\"ten_yr_diff\"][choose]\n      return [perc_diff if perc_diff!='' and perc_diff!='nan' else \"\"][0]\n\n    @output\n    @render.text\n    def prnt():\n      choose = int(input.choose())-1\n      perc_diff = types[\"ten_yr_diff\"][choose]\n      perc_diff = int(float(perc_diff))\n      perc_diff = [str(perc_diff)+\"% increase\" if perc_diff>=0 else str(perc_diff)+\"% decrease\"][0]\n      return perc_diff\n\n    @output\n    @render.image\n    #def gif() -> ImgData:\n        #  return {\"src\": \"gifs/wdv_2023_wjhl10y_\"+str(choose)+\".gif\", \"height\": \"125%\", \"width\": \"75%\"}\n    def image():\n        from pathlib import Path\n        dir = Path(__file__).parent \n        img: ImgData = {\"src\": str(dir / \"WGS-summit-logo.png\"), \"width\": \"150px\"}\n        return img\n    \n    #@output\n    #@render.image\n    #def gif():\n    #    from pathlib import Path\n    #    choose = str(int(input.choose()))\n    #    fname = \"wdv_2023_wjhl10y_\"+choose+\".gif\"\n    #    infile = Path(__file__).parent / fname\n    #    img: ImgData = {\"src\": infile, \"height\": \"125%\", \"width\": \"75%\"}\n    #    return img\n\n    @reactive.Effect\n    def _():\n        choose = int(input.choose())-1\n\n        met = types[\"metric\"][choose]\n        met = [\" (\"+met+\")\" if met!='' and met!='nan' else \"\"][0]\n        desc = types[\"type2\"][choose]\n        desc  = [\": \"+desc if desc !='' and desc!='nan' else \"\"][0]\n        type_title = types[\"type1\"][choose]\n\n        t_data = pd.DataFrame(np.c_[wdv_2023_wjhl10y[\"data_year\"],wdv_2023_wjhl10y.index,wdv_2023_wjhl10y.iloc[:,choose+1],np.arange(1,12)])\n        t_data.columns = [\"year\", \"year_id\", \"t_diff\", \"year_number\"]\n        t_data = t_data.ffill(axis = 0)\n        months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        t_data = pd.DataFrame(np.c_[np.repeat(t_data[\"year\"],12), np.tile(months,11), np.repeat(t_data[\"t_diff\"],12)])\n        t_data.columns = [\"year\", \"month\", \"t_diff\"]\n        t_data = t_data.ffill(axis = 0)\n        t_data['month_number'] = np.tile(np.arange(1,12),12)\n        t_data['year'] = t_data['year'].astype(float)\n        t_data['year'] = t_data['year'].astype(int)\n        t_data['month_number'] = t_data['month_number'].astype(int)\n        t_data['t_diff'] = t_data['t_diff'].astype(float)\n        t_data['radius'] = t_data['t_diff'].values + 1.5\n        t_data['theta'] = 2 * np.pi * (t_data['month_number']-1)/12\n        t_data['x'] = t_data['radius'] * np.sin(t_data['theta'])\n        t_data['y'] = t_data['radius'] * np.cos(t_data['theta'])\n        t_data['z'] = t_data['year']\n        t_data['label'] = t_data[\"year\"].astype(str) + \": \" + t_data[\"t_diff\"].astype(str)\n        # t_data['label'] = t_data[\"month\"] + \" \" + t_data[\"year\"].astype(str) + \": \" + t_data[\"t_diff\"].astype(str)\n\n        spiralPlot = go.FigureWidget(\n            data=[\n                go.Scatter3d(\n                    x = t_data.x, \n                    y = t_data.y, \n                    z = t_data.z,\n                    connectgaps = False,\n                    showlegend = False,\n                    text = t_data.label,\n                    hoverinfo = \"text\",\n                    mode = 'lines',\n                    line=dict(color=t_data.t_diff*-1,colorscale='rdbu',width=12)\n                            )\n            ],\n            # data=[\n            #     go.Scatter(\n            #         x = t_data.x, \n            #         y = t_data.y,\n            #         connectgaps = False,\n            #         showlegend = False,\n            #         text = t_data.label,\n            #         hoverinfo = \"text\",\n            #         mode = 'markers+lines',\n            #         marker=dict(color=t_data.t_diff*-1,colorscale='rdbu',showscale=True),\n            #         line_color='white',\n            #         fill='tonone',\n            #         fillcolor='black'\n            #                 )\n            # ],\n            layout={'title':type_title+desc+met},\n        )\n        spiralPlot.update_layout(scene = dict(xaxis = dict(backgroundcolor=color0,\n                                                           gridcolor=color3,\n                                                           showbackground=True,\n                                                           zerolinecolor=color3,\n                                                           showticklabels=True,\n                                                           showgrid=False,\n                                                           title='',\n                                                           tickmode='auto',\n                                                           nticks=4,\n                                                           ),\n                                              yaxis = dict(backgroundcolor=color0,\n                                                           gridcolor=color3,\n                                                           showbackground=True,\n                                                           zerolinecolor=color3,\n                                                           showticklabels=False,\n                                                           showgrid=False,\n                                                           title='',\n                                                           tickmode='auto',\n                                                           nticks=4,\n                                                           ),\n                                              zaxis = dict(backgroundcolor=color0,\n                                                           gridcolor=color3,\n                                                           showbackground=True,\n                                                           zerolinecolor=color3,\n                                                           showticklabels=True,\n                                                           showgrid=False,\n                                                           title='',\n                                                           tickmode='linear',\n                                                           nticks=10,\n                                                           ),\n                                               ),\n                                paper_bgcolor=color0,\n                                 )\n        spiralPlot.layout.height = 750\n        spiralPlot.layout.width = 750\n\n        register_widget(\"spiralPlot\", spiralPlot)\n\n\napp = App(app_ui, server, static_assets=Path(__file__).parent / \"\")", "type": "text"}, {"name": "WGS-summit-logo.png", "content": "", "type": "binary"}, {"name": "commands.txt", "content": "pushd E:\npython -m pip install shiny\nshiny create myapp\n\npython -m pip install shinylive\nshinylive export myapp docs\nshiny run --reload myapp/app.py\n\npython -m http.server --directory docs 8008\n\ncd E:\\WDVP2023\\wdvp2023-interactive\necho \"# wdvp2023-interactive\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/columcrowe/wdvp2023-interactive.git\ngit push -u origin main\n\ngit add .\ngit commit -m \"Fix errors\"\ngit push -u origin main\n\ngit pull https://github.com/columcrowe/wdvp2023-interactive.git\n", "type": "text"}, {"name": "data_descs.csv", "content": "\"type1\",\"type2\",\"metric\",\"ten_yr_diff\"\n\"Tropical Diseases\",\"global deaths\",NA,-17.8303877042343\n\"Tuberculosis\",\"global cases\",NA,-12.523103127747\n\"Tuberculosis\",\"incidence\",\"per 100,000 people\",-22.289156626506\n\"Tuberculosis\",\"deaths\",\"per 100,000 people\",-19.047619047619\n\"Malaria\",\"Incidence\",\"per 1,000 people at risk\",-14.3884892086331\n\"Malaria\",\"deaths\",NA,-29.3112976715109\n\"Polio\",\"Incidence\",\"reported cases\",-11.2606232294618\n\"HIV / AIDS\",\"Incidence (new cases)\",NA,-16.0965499439458\n\"HIV / AIDS\",\"deaths per 100,000\",NA,-43.8449449973808\n\"HIV / AIDS\",\"total deaths\",\"million deaths\",-37.2262773722628\n\"Countries Who've Eradicated Malaria\",\"no. of countries\",NA,47.887323943662\n\"Smoking\",\"% smoking\",NA,-17.2661870503597\n\"Deaths from Smoking\",\"deaths per 100,000 people\",NA,-15.3893805309735\n\"Dementia\",\"Incidence\",NA,37.1566787635858\n\"Health Expenditure\",\"current expenditure per capita (current US$)\",NA,23.0263157894737\n\"Infant Mortality\",\"mortality per 1000 live births\",\"%\",-27.4193548387097\n\"Maternal Mortality\",\"No of Maternal Deaths\",NA,-13.9941690962099\n\"Renewable Energy\",\"Share of global electricity production\",\"%\",43.8144329896907\n\"Renewable Energy\",\"Share of global primary energy\",\"%\",52.7809307604994\n\"Renewable Energy\",\"Global energy-generating capacity\",\"watts per capita\",141.176470588235\n\"Wind Power\",\"Share of global electricity production\",\"%\",268.944099378882\n\"Wind Power\",\"Total Electricity generated from Wind\",\"Terawatt Hours (Twh) per year\",361.271676300578\n\"Wind Power\",\"Share of global primary energy production\",\"%\",294.117647058823\n\"Solar Power\",\"Share of global electricity production\",\"%\",1868.75\n\"Solar Power\",\"Share of global primary energy\",\"%\",1928.57142857143\n\"Photovoltaic Solar Power (PV)\",\"Cumulative capacity\",\"Megawatts (MW)\",1660.82354107789\n\"Photovoltaic Solar Power (PV)\",\"Installation Cost\",\"$/KWh\",-80.9484193011647\n\"Renewables\",\"New Investment\",\"$USD billions\",33.9483394833948\n\"Nuclear Power\",\"as % of global electricity production\",NA,-21.875\n\"Natural Gas\",\"as % of global electricity production\",NA,4.40528634361234\n\"Oil\",\"as % of global electricity production\",NA,-43.1818181818182\n\"Coal\",\"as % of global electricity production\",NA,-12.25\n\"Extreme Poverty\",\"% not in extreme poverty\",\"%\",9.21257019954595\n\"Access to Electricity\",\"% of global population\",\"%\",8.38323353293413\n\"Access to Internet\",\"% of global population\",\"%\",106.896551724138\n\"People Using At Least Basic Drinking Water\",NA,\"%\",4.40835266821345\n\"Access to safely managed Sanitation\",\"% of global population\",\"%\",35\n\"Life Expectancy\",\"life expectancy at birth\",\"years\",2.71041369472183\n\"Hunger\",\"prevalence of undernourishment (% of population)\",\"%\",8.13953488372094\n\"Air Pollution\",\"share exposed to air pollution above WHO limits\",\"%\",-3.99579390115667\n\"Road Safety\",\"Road traffic death rate\",\"per 100,000 population\",-8.74316939890711\n\"Happy Planet Index\",\"Average Happy Planet Index\",NA,5.5045871559633\n\"Human Development Index\",\"HDI\",NA,5.4519368723099\n\"Global Literacy Rate\",NA,NA,3.18971673411093\n\"Global Female Adult Literacy Rate\",NA,\"%\",4.3859649122807\n\"Global Male Adult Literacy Rate\",NA,\"%\",2.05099150141643\n\"Gap between Male & Female Adult Literacy\",NA,\"%\",-19.8816568047337\n\"% of Girls Not in Primary School\",\"% of girls of primary school age\",NA,-0.208768267223378\n\"% of Boys Not in Primary School\",\"% of boys of primary school age\",NA,-2.43605359317906\n\"% of Children Not in Primary School\",\"% of kids of primary school age\",NA,-1.2401352874859\n\"School Enrollment\",\"net primary school enrolment (% children of official school age who are enrolled in school to the population of the corresponding official school age(\",\"%\",0.902934537246063\n\"Girls Secondary School Enrollment\",\"%\",NA,6.76328502415458\n\"Expected Years of Schooling\",\"The number of years a child of school entrance age can expect to receive if thecurrent age-specific enrollment rates persist throughout the child?s years ofschooling.\",\"years\",9.12190963341859\n\"Women's MPs\",\"% of representatives\",NA,33.5073068893528\n\"Electric Cars\",\"as % of new sales\",NA,425900\n\"Price of Lithium Ion Battery Pack\",\"volume weighted average\",\"$USD 2020\",-88.4970612930311\n\"Deforestation\",\"land covered by trees\",\"%\",-0.952380952380955\n\"Biodiversity\",\"Global living planet index (1970=100%)\",\"%\",-12.2159090909091\n\"Global CO2 emissions\",\"billion t\",NA,5.68862275449102\n\"Methane emissions\",\"million t\",NA,8.84955752212388\n\"Foreign Aid\",\"net official development assistance\",\"$USD bn\",51.5625\n\"GDP per capita\",\"$USD\",NA,16.5059026778002\n\"GDP growth per capita\",\"%\",NA,-232\n\"Economic Freedom\",NA,NA,3.70370370370371\n\"Economic Growth\",\"GDP\",\"2015 USD\",26.1941448382126\n", "type": "text"}, {"name": "requirements.txt", "content": "plotly\nshinywidgets", "type": "text"}, {"name": "wdv_2023_wjhl10y.csv", "content": "\"data_year\",\"Tropical Diseases\",\"Tuberculosis\",\"Tuberculosis\",\"Tuberculosis\",\"Malaria\",\"Malaria\",\"Polio\",\"HIV / AIDS\",\"HIV / AIDS\",\"HIV / AIDS\",\"Countries Who've Eradicated Malaria\",\"Smoking\",\"Deaths from Smoking\",\"Dementia\",\"Health Expenditure\",\"Infant Mortality\",\"Maternal Mortality\",\"Renewable Energy\",\"Renewable Energy\",\"Renewable Energy\",\"Wind Power\",\"Wind Power\",\"Wind Power\",\"Solar Power\",\"Solar Power\",\"Photovoltaic Solar Power (PV)\",\"Photovoltaic Solar Power (PV)\",\"Renewables\",\"Nuclear Power\",\"Natural Gas\",\"Oil\",\"Coal\",\"Extreme Poverty\",\"Access to Electricity\",\"Access to Internet\",\"People Using At Least Basic Drinking Water\",\"Access to safely managed Sanitation\",\"Life Expectancy\",\"Hunger\",\"Air Pollution\",\"Road Safety\",\"Happy Planet Index\",\"Human Development Index\",\"Global Literacy Rate\",\"Global Female Adult Literacy Rate\",\"Global Male Adult Literacy Rate\",\"Gap between Male & Female Adult Literacy\",\"% of Girls Not in Primary School\",\"% of Boys Not in Primary School\",\"% of Children Not in Primary School\",\"School Enrollment\",\"Girls Secondary School Enrollment\",\"Expected Years of Schooling\",\"Women's MPs\",\"Electric Cars\",\"Price of Lithium Ion Battery Pack\",\"Deforestation\",\"Biodiversity\",\"Global CO2 emissions\",\"Methane emissions\",\"Foreign Aid\",\"GDP per capita\",\"GDP growth per capita\",\"Economic Freedom\",\"Economic Growth\"\n2010,2016434,1386717,166,21,69.5,910161,1412,2370918,19.09,1.37,71,27.8,113,5275999,912,37.2,343000,19.4,8.81,102,1.61,346,0.68,0.16,0.07,40338,4808,271,12.8,22.7,4.4,40,83.69,83.5,29,86.2,40,70.1,8.6,95.1,18.3,43.6,0.697,84.02,79.8,88.25,8.45,9.58,8.21,8.87,88.6,62.1,11.73,19.16,0.001,1191,31.5,35.2,3.34,7.91,1.28,13892,3.25,59.4,6.49\n2011,1960756,1353969,163,20,66.5,868828,716,2342046,17.71,1.28,72,27.8,111,5462761,986,35.8,334000,19.8,8.99,110,1.98,440,0.84,0.29,0.13,72216,4104,323,11.9,22.2,4.7,40.8,85.87,82.5,31,86.5,41.3,70.5,8.3,95.8,18.2,44,0.704,84.3,80.2,88.37,8.13,9.41,8.4,8.89,88.7,63.3,11.96,19.83,0.11,924,31.5,33.4,3.45,8.05,1.39,14260,2.13,59.7,6.7\n2012,1895419,1321313,160,19,64.3,806421,293,2314238,16.32,1.2,98,27.8,108,5665887,996,34.5,326000,20.6,9.42,118,2.32,530,0.99,0.45,0.19,101745,3124,290,10.8,23,5,39.9,87.26,85,34,86.9,42.8,70.9,8.2,94.5,18.2,44.1,0.709,84.7,80.7,88.78,8.08,9.29,7.99,8.62,89,63.8,12.11,20.76,0.19,726,31.5,32.4,3.5,8.14,1.33,14528,1.43,59.5,6.88\n2013,1814474,1289369,156,19,61.8,752017,481,2285709,15.13,1.13,98,27.8,106,5877641,1012,33.3,319000,21.5,9.86,129,2.71,636,1.16,0.59,0.25,137227,2742,267,10.6,21.9,4.6,40.8,87.26,85.2,36,87.4,44.2,71.2,7.9,93.7,18,44,0.714,84.9,80.9,88.93,7.99,9.09,7.69,8.37,89,64.8,12.26,21.78,0.31,668,31.4,31.7,3.53,8.11,1.51,14824,1.61,59.6,7.08\n2014,1814474,1261016,153,18,59.8,724533,415,2265234,14.22,1.07,98,27.8,103,6094468,1035,32.2,313000,22,10.22,142,2.93,706,1.27,0.82,0.35,175617,2478,328,10.6,21.9,4.3,40.6,87.26,85.7,38,87.8,45.7,71.6,7.8,92.7,17.5,44.6,0.72,85.4,81.5,89.21,7.68,9.59,8.03,8.78,89.2,65.7,12.42,22.19,0.41,592,31.4,31.7,3.56,8.27,1.61,15149,1.89,60.3,7.29\n2015,1699509,1236143,150,18,58.9,703065,106,2243665,13.47,1.03,99,25.2,102,6310572,994,31.2,306000,22.7,10.5,156,3.42,831,1.47,1.05,0.45,223204,1887,356,10.6,23.1,4.2,38.7,90.39,87,40,88.2,47.1,71.8,8,92.6,17.2,44.3,0.724,85.5,81.8,89.33,7.56,9.87,8.18,8.99,89.2,65.8,12.53,22.85,0.68,384,31.3,31.6,3.56,8.32,1.46,15480,1.96,60.4,7.52\n2016,1656896,1213057,145,17,58.7,660569,42,2196714,12.85,0.97,101,25.2,99.79,6550073,1016,30.3,3e+05,23.5,10.93,171,3.86,962,1.67,1.31,0.57,295229,1717,344,10.5,23.5,3.8,37.8,90.39,87.4,43,88.6,48.6,72.1,7.8,91.3,17,44.5,0.729,86,82.3,89.68,7.37,9.72,7.93,8.8,89.4,65.8,12.69,23.1,0.89,295,31.3,31.1,3.55,8.23,1.58,15803,1.64,60.7,7.73\n2017,1656896,1213057,141,17,59.2,629854,118,2131659,12.06,0.95,101,25.2,97.79,6794975,1057,29.4,295000,24.4,11.36,188,4.45,1140,1.93,1.74,0.75,390207,1483,392,10.3,23.2,3.4,37.9,90.39,88.9,46,88.9,50.1,72.3,7.6,91.3,16.9,44.3,0.733,86.2,82.6,89.8,7.16,9.7,7.93,8.78,89.3,66.3,12.71,23.6,1.39,221,31.3,30.9,3.61,8.33,1.64,16211,2.22,60.9,7.99\n2018,1656896,1213057,137,16,57.2,631744,138,2042488,11.22,0.89,103,23.4,96.59,7018467,1103,29,295000,25,11.74,205,4.76,1270,2.08,2.16,0.94,483012,1267,362,10.1,23.3,2.9,37.9,91.4,88.9,49,89.3,51.6,72.6,7.7,91.3,16.7,44.2,0.736,86.3,82.7,89.78,7.05,9.6,7.56,8.55,89.4,66.3,12.71,24.1,2.25,181,31.2,30.9,3.68,8.49,1.66,16607,2.14,61.1,8.25\n2019,1656896,1213057,134,16,56.3,643381,554,1989282,10.72,0.86,105,23.4,95.61,7236385,1122,28,295000,26,12.24,220,5.25,1421,2.29,2.6,1.14,584686,1046,363,10.3,23.7,2.6,36.5,91.4,88.9,54,89.7,53,72.8,8,91.3,16.7,44.1,0.739,86.5,83,89.93,6.91,9.61,7.73,8.64,89.4,66.3,12.73,24.64,2.66,157,31.2,30.9,3.71,8.61,1.62,16897,1.52,60.8,8.47\n2020,1656896,1213057,129,17,59.5,643381,1253,1989282,10.72,0.86,105,23,95.61,7236385,1122,27,295000,27.9,13.46,246,5.94,1596,2.68,3.15,1.42,710281,916,363,10,23.7,2.5,35.1,91.4,90.5,60,90,54,72,9.3,91.3,16.7,46,0.735,86.7,83.3,90.06,6.77,9.56,8.01,8.76,89.4,66.3,12.8,25.58,4.26,137,31.2,30.9,3.53,8.61,1.94,16185,-4.29,61.6,8.19\n", "type": "text"}]